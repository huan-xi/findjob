<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.huanxicloud.findjob.mapper.ResumeMapper">
  <resultMap id="BaseResultMap" type="xyz.huanxicloud.findjob.pojo.Resume">
    <id column="resume_id" jdbcType="INTEGER" property="resumeId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthday" jdbcType="BIGINT" property="birthday" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="time_type" jdbcType="CHAR" property="timeType" />
    <result column="ex_career" jdbcType="VARCHAR" property="exCareer" />
    <result column="ex_industry" jdbcType="VARCHAR" property="exIndustry" />
    <result column="ex_salary_min" jdbcType="INTEGER" property="exSalaryMin" />
    <result column="ex_salary_max" jdbcType="INTEGER" property="exSalaryMax" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    resume_id, user_id, name, sex, birthday, city, time_type, ex_career, ex_industry, 
    ex_salary_min, ex_salary_max, phone, email
  </sql>
  <select id="selectByExample" parameterType="xyz.huanxicloud.findjob.pojo.ResumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from resume
    where resume_id = #{resumeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resume
    where resume_id = #{resumeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xyz.huanxicloud.findjob.pojo.ResumeExample">
    delete from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xyz.huanxicloud.findjob.pojo.Resume">
    insert into resume (resume_id, user_id, name, 
      sex, birthday, city, 
      time_type, ex_career, ex_industry, 
      ex_salary_min, ex_salary_max, phone, 
      email)
    values (#{resumeId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=BIGINT}, #{city,jdbcType=VARCHAR}, 
      #{timeType,jdbcType=CHAR}, #{exCareer,jdbcType=VARCHAR}, #{exIndustry,jdbcType=VARCHAR}, 
      #{exSalaryMin,jdbcType=INTEGER}, #{exSalaryMax,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="xyz.huanxicloud.findjob.pojo.Resume">
    insert into resume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resumeId != null">
        resume_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="timeType != null">
        time_type,
      </if>
      <if test="exCareer != null">
        ex_career,
      </if>
      <if test="exIndustry != null">
        ex_industry,
      </if>
      <if test="exSalaryMin != null">
        ex_salary_min,
      </if>
      <if test="exSalaryMax != null">
        ex_salary_max,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resumeId != null">
        #{resumeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=BIGINT},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="timeType != null">
        #{timeType,jdbcType=CHAR},
      </if>
      <if test="exCareer != null">
        #{exCareer,jdbcType=VARCHAR},
      </if>
      <if test="exIndustry != null">
        #{exIndustry,jdbcType=VARCHAR},
      </if>
      <if test="exSalaryMin != null">
        #{exSalaryMin,jdbcType=INTEGER},
      </if>
      <if test="exSalaryMax != null">
        #{exSalaryMax,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xyz.huanxicloud.findjob.pojo.ResumeExample" resultType="java.lang.Long">
    select count(*) from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update resume
    <set>
      <if test="record.resumeId != null">
        resume_id = #{record.resumeId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=BIGINT},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.timeType != null">
        time_type = #{record.timeType,jdbcType=CHAR},
      </if>
      <if test="record.exCareer != null">
        ex_career = #{record.exCareer,jdbcType=VARCHAR},
      </if>
      <if test="record.exIndustry != null">
        ex_industry = #{record.exIndustry,jdbcType=VARCHAR},
      </if>
      <if test="record.exSalaryMin != null">
        ex_salary_min = #{record.exSalaryMin,jdbcType=INTEGER},
      </if>
      <if test="record.exSalaryMax != null">
        ex_salary_max = #{record.exSalaryMax,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update resume
    set resume_id = #{record.resumeId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=BIGINT},
      city = #{record.city,jdbcType=VARCHAR},
      time_type = #{record.timeType,jdbcType=CHAR},
      ex_career = #{record.exCareer,jdbcType=VARCHAR},
      ex_industry = #{record.exIndustry,jdbcType=VARCHAR},
      ex_salary_min = #{record.exSalaryMin,jdbcType=INTEGER},
      ex_salary_max = #{record.exSalaryMax,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.huanxicloud.findjob.pojo.Resume">
    update resume
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=BIGINT},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="timeType != null">
        time_type = #{timeType,jdbcType=CHAR},
      </if>
      <if test="exCareer != null">
        ex_career = #{exCareer,jdbcType=VARCHAR},
      </if>
      <if test="exIndustry != null">
        ex_industry = #{exIndustry,jdbcType=VARCHAR},
      </if>
      <if test="exSalaryMin != null">
        ex_salary_min = #{exSalaryMin,jdbcType=INTEGER},
      </if>
      <if test="exSalaryMax != null">
        ex_salary_max = #{exSalaryMax,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where resume_id = #{resumeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.huanxicloud.findjob.pojo.Resume">
    update resume
    set user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=BIGINT},
      city = #{city,jdbcType=VARCHAR},
      time_type = #{timeType,jdbcType=CHAR},
      ex_career = #{exCareer,jdbcType=VARCHAR},
      ex_industry = #{exIndustry,jdbcType=VARCHAR},
      ex_salary_min = #{exSalaryMin,jdbcType=INTEGER},
      ex_salary_max = #{exSalaryMax,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where resume_id = #{resumeId,jdbcType=INTEGER}
  </update>
</mapper>